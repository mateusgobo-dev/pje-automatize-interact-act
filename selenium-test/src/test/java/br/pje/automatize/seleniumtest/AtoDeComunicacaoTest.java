package br.pje.automatize.seleniumtest;// Generated by Selenium IDE

import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.function.Consumer;
import java.util.stream.Stream;

public class AtoDeComunicacaoTest {
    private WebDriver driver;
    private WebDriverWait wait;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @BeforeEach
    public void setUp() {
//        WebDriverManager.firefoxdriver().setup();
//        FirefoxOptions options = new FirefoxOptions();
//        ChromeOptions options = new ChromeOptions();

        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<>();
        wait = new WebDriverWait(driver, Duration.ofSeconds(2));
    }

    Consumer<Integer> sleep = (value) -> {
        try {
            Thread.sleep(value);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    };

    @Test
    public void publicandoAtoComunicacaoPAC() {
        try {
            driver.get("https://stg-03.tjrj.pje.jus.br/1g/login.seam");

            sleep.accept(1000);

            driver.findElement(By.id("username")).sendKeys("32454725878");

            sleep.accept(1000);

            driver.findElement(By.id("password")).sendKeys("mateusgobo65");

            sleep.accept(1000);

            driver.findElement(By.id("btnEntrar")).click();

            driver.findElement(By.cssSelector(".dropdown")).click();
            WebElement jecOption = driver.findElement(By.id("papeisUsuarioForm:usuarioLocalizacaoDecoration:usuarioLocalizacao"));
            Select select = new Select(jecOption);
            select.selectByValue("1");

            sleep.accept(1000);

            WebElement button = driver.findElement(By.xpath("//form[@action='/1g/QuadroAviso/listViewQuadroAvisoMensagem.seam']//input[@type='submit']"));
            if (button.getAttribute("value").equals("Painel do usuário")) {
                button.click();
            }

            sleep.accept(1000);
            WebElement mainFrame = driver.findElement(
                    By.xpath("//iframe[@id='ngFrame']"));
            System.out.println(mainFrame.getAttribute("src"));
            WebDriver angularFrame = driver.switchTo().frame(mainFrame);

            sleep.accept(1000);

            WebElement jecList = angularFrame.findElement(By.xpath("//li[@id='liTarefas']"));
            jecList.click();
            sleep.accept(1000);

            angularFrame.findElement(By.xpath("//a[@title='Processamento [JEC_PVD]']")).click();
            sleep.accept(1000);

            boolean tarefaHasFound = tarefaHasFounded(angularFrame);
            if (!tarefaHasFound) {
                //frameDriver.findElement(By.xpath("//a[@class='btn btn-default']"))
                System.out.println("Tarefa nao encontrada! Preparando ato de comunicacao!....");
                driver.get("https://stg.tjrj.pje.jus.br/1g/ng2/dev.seam#/painel-usuario-interno");

                angularFrame = driver.switchTo().frame(mainFrame);
                jecList = angularFrame.findElement(By.xpath("//li[@id='liTarefas']"));
                sleep.accept(1000);
                jecList.click();

                sleep.accept(1000);
                WebElement webElement = angularFrame.findElement(By.xpath("//a[@title='Preparar comunicação']"));
                webElement.click();

                sleep.accept(1000);
                tarefaHasFounded(angularFrame);
                WebElement btnProximo = angularFrame.findElement(By.xpath("//input[@value='Próximo']"));
                btnProximo.click();
            }
            Thread.sleep(10000);
        } catch (Exception e) {
            System.out.println("Erro na execucao do teste, [error] => %s".formatted(e.getMessage()));
        } finally {
            driver.quit();
        }
    }

    private boolean clickOnTask(WebElement tarefa) throws Exception {
        try {
            sleep.accept(4000);
            WebElement tarefaCheck = tarefa.findElement(By.xpath(".//a[@class='selecionarProcesso']")).findElement(By.xpath(".//span[@class='tarefa-numero-processo process']"));
            tarefaCheck.click();
            return true;
        } catch (Exception e) {
            throw new Exception(e.getMessage());
        }
    }

    private boolean tarefaHasFounded(WebDriver angularFrame) throws Exception {
        try {
            List<WebElement> tarefas = angularFrame.findElement(By.xpath("//div[@id='divRightPanel']")).findElement(By.xpath(".//div[@id='processosTarefa']")).findElements(By.cssSelector("ul > li"));
            boolean tarefaHasFound = false;
            for (WebElement tarefa : tarefas) {
                String[] textoTarefaQuebra = tarefa.getText().split("\n");
                tarefaHasFound = Stream.of(textoTarefaQuebra).filter(tq -> tq.toLowerCase().contains("PJEC 0801022-25.2024.8.19.0031".toLowerCase())).findFirst().isPresent();
                if (tarefaHasFound) {
                    try {
                        clickOnTask(tarefa);
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                }
                if (tarefaHasFound) break;
            }
            if (tarefaHasFound) {
                System.out.println("Tarefa encontrada com sucesso!");

                sleep.accept(1000);
                angularFrame.findElement(By.xpath("//div[@id='divMainPanel']")).findElement(By.xpath(".//button[@id='btnTransicoesTarefa']")).click();
                sleep.accept(1000);

                List<WebElement> transicoes = angularFrame.findElement(By.xpath("//div[@id='divMainPanel']")).findElements(By.cssSelector("ul > li > a"));
                for (WebElement transicao : transicoes) {
                    System.out.println(transicao.getAttribute("title"));
                    boolean hasClicked = false;
                    if (transicao.getAttribute("title").toLowerCase().contains("Encaminhar para Preparar Ato de Comunicacao".toLowerCase())) {
                        transicao.click();
                        hasClicked = true;
                    }
                    if (hasClicked) break;
                }
                sleep.accept(3000);

                WebElement frameTarefa = angularFrame.findElement(By.xpath("//iframe[@id='frame-tarefa']"));
                System.out.println(frameTarefa.getAttribute("src"));

                String[] srcSplit = frameTarefa.getAttribute("src").split("\\?");
                String taskId = srcSplit[1].split("&")[0].split("=")[1];
                String processoId = srcSplit[1].split("&")[1].split("=")[1];

                WebDriver frameTarefaDriver = angularFrame.switchTo().frame(frameTarefa);
                System.out.println("taskId = " + taskId + ", processoId: " + processoId);
                sleep.accept(3000);


                List<WebElement> frameTarefaButtons = frameTarefaDriver.findElements(By.xpath("//a[@class='btn btn-default']"));
                frameTarefaButtons.stream().filter(button -> button.getText().toLowerCase().equals("INTIMAR TODOS".toLowerCase()))
                        .findFirst().orElseThrow(() -> new RuntimeException("Elemento não encontrado!")).click();
                sleep.accept(4000);

                WebElement table = frameTarefaDriver.findElement(By.xpath("//table[@id='taskInstanceForm:Processo_Fluxo_prepararExpediente-" + taskId + ":destinatariosTable']"));
                sleep.accept(2000);

                WebElement tableBody = table.findElement(By.xpath(".//tbody[@id='taskInstanceForm:Processo_Fluxo_prepararExpediente-" + taskId + ":destinatariosTable:tb']"));
                sleep.accept(2000);

                List<WebElement> rowsTable = tableBody.findElements(By.xpath(".//tr[@class='rich-table-row' or @class='rich-table-row rich-table-firstrow']"));
                sleep.accept(2000);

                AtomicReference<WebElement> autor = new AtomicReference<>();
                AtomicBoolean add = new AtomicBoolean(false);
                final List<WebElement> outraParte = new ArrayList<>();
                rowsTable.stream().forEach(row -> {
                    if (!add.get() && row.getText().toLowerCase().contains("autor")) {
                        add.set(true);
                        autor.set(row);
                    } else {
                        outraParte.add(row);
                    }
                });
                sleep.accept(3000);

                WebElement dropDownComunicacao = autor.get().findElement(By.xpath(".//select[@id='taskInstanceForm:Processo_Fluxo_prepararExpediente-" + taskId + ":destinatariosTable:0:tipoAtoCombo']"));
                Select selectOptionComunicacao = new Select(dropDownComunicacao);
                selectOptionComunicacao.selectByIndex(1);
                sleep.accept(2000);

                WebElement dropDownMeio = autor.get().findElement(By.xpath(".//select[@id='taskInstanceForm:Processo_Fluxo_prepararExpediente-" + taskId + ":destinatariosTable:0:meioCom']"));
                Select selectOptionMeio = new Select(dropDownMeio);
                selectOptionMeio.selectByIndex(1);
                sleep.accept(2000);

                outraParte.stream().forEach(row -> {
                    row.findElement(By.xpath(".//a[@class='btn btn-default btn-sm']")).click();
                });
                sleep.accept(2000);
            }
            return tarefaHasFound;
        }catch (Exception e) {
            throw new Exception(e);
        }
    }
}
